def nom1():
    stol = {"Россия": "Москва", "Франция": "Париж", "Германия": "Берлин"}
    print(stol)
    a = input("Введите страну: ")
    if a in stol.keys(): #Метод keys() возвращает объект, содержащий список всех ключей словаря.
        rez = stol[a]
        print(f"Столица введённой страны -  {rez}")
    else:
        print("Такой стрaны нет")
    sorted_stol = dict(sorted(stol.items())) #метод items() возвращает представление пар ключ-значение в виде объекта типа dict_items
    print(sorted_stol)


def nom2():
    alf = {
        1: ["а", "в", "е", "и", "н", "о", "р", "с", "т"],
        2: ["д", "к", "л", "м", "п", "у"],
        3: ["б", "г", "ё", "ь", "я"],
        4: ["й", "ы"],
        5: ["ж", "з", "х", "ц", "ч"],
        8: ["ш", "э", "ю"],
        10: ["ф", "щ", "ъ"]
    }
    a = input('Введите слово: ')
    a = a.lower()  #приводим введённое слово к нижнему регистру для обработки
    sum = 0
    for i in a:
        for ch, byk in alf.items():
            if i in byk:
                sum = sum + ch
    print(f"стоимомть: {a}: {sum}")


def nom3():
    import random
    obuch = {} #создаем пустое множество обучающихся
    yaz = ["русский", "китайский", "немецкий", "французский", "английский", "белорусский"]
    kol_stud = [] #создаем список для обуч, которые знают китайский
    chislo_stud = random.randint(2, 8)
    for i in range(chislo_stud):
        izuch_yaz = set(random.sample(yaz, random.randint(1, len(yaz)))) #формируем случайны набор языков
        obuch[f'Обучающийся {i + 1}'] = izuch_yaz #присваеиваем случайный набор языков конкретному обучающемуся по порядку
    for stud, ya in obuch.items():
        print(stud, "говорит на: ", ya) #выводим номер обучающегося и языки, на которых он говорит
    vse_yaz = set() #создаем пустое множество под определение языков, на которых говорят все обучающиеся
    for ya in obuch.values():
        vse_yaz.update(ya) #Метод update() обновляет словарь (множество) элементами из другого объекта
    print("Перечислены все языки, которые знают обучающиеся: ", sorted(vse_yaz))
    for stud, ya in obuch.items(): #ищем обучающихся, которые знают китайский
        if 'китайский' in ya:
            kol_stud.append(stud)
    print("Обучающиеся, которые владеют китайским: ", kol_stud)